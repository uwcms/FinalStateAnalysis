diff --git a/DataFormats/PatCandidates/src/TriggerEvent.cc b/DataFormats/PatCandidates/src/TriggerEvent.cc
index 47f8d36..89e54ef 100644
--- a/DataFormats/PatCandidates/src/TriggerEvent.cc
+++ b/DataFormats/PatCandidates/src/TriggerEvent.cc
@@ -89,7 +89,7 @@ const TriggerAlgorithmRefVector TriggerEvent::algorithmRefs() const
 {
   TriggerAlgorithmRefVector theAlgorithms;
   for ( TriggerAlgorithmCollection::const_iterator iAlgorithm = algorithms()->begin(); iAlgorithm != algorithms()->end(); ++iAlgorithm ) {
-    const std::string nameAlgorithm( iAlgorithm->name() );
+    const std::string& nameAlgorithm( iAlgorithm->name() );
     const TriggerAlgorithmRef algorithmRef( algorithms_, indexAlgorithm( nameAlgorithm ) );
     theAlgorithms.push_back( algorithmRef );
   }
@@ -361,7 +361,7 @@ TriggerPathRefVector TriggerEvent::acceptedPaths() const
   TriggerPathRefVector theAcceptedPaths;
   for ( TriggerPathCollection::const_iterator iPath = paths()->begin(); iPath != paths()->end(); ++iPath ) {
     if ( iPath->wasAccept() ) {
-      const std::string namePath( iPath->name() );
+      const std::string& namePath( iPath->name() );
       const TriggerPathRef pathRef( paths_, indexPath( namePath ) );
       theAcceptedPaths.push_back( pathRef );
     }
@@ -375,7 +375,7 @@ const TriggerFilterRefVector TriggerEvent::filterRefs() const
 {
   TriggerFilterRefVector theFilters;
   for ( TriggerFilterCollection::const_iterator iFilter = filters()->begin(); iFilter != filters()->end(); ++iFilter ) {
-    const std::string labelFilter( iFilter->label() );
+    const std::string& labelFilter( iFilter->label() );
     const TriggerFilterRef filterRef( filters_, indexFilter( labelFilter ) );
     theFilters.push_back( filterRef );
   }
@@ -418,7 +418,7 @@ TriggerFilterRefVector TriggerEvent::acceptedFilters() const
   TriggerFilterRefVector theAcceptedFilters;
   for ( TriggerFilterCollection::const_iterator iFilter = filters()->begin(); iFilter != filters()->end(); ++iFilter ) {
     if ( iFilter->status() == 1 ) {
-      const std::string labelFilter( iFilter->label() );
+      const std::string& labelFilter( iFilter->label() );
       const TriggerFilterRef filterRef( filters_, indexFilter( labelFilter ) );
       theAcceptedFilters.push_back( filterRef );
     }
@@ -484,7 +484,7 @@ TriggerAlgorithmRefVector TriggerEvent::conditionAlgorithms( const TriggerCondit
   TriggerAlgorithmRefVector theConditionAlgorithms;
   size_t cAlgorithms( 0 );
   for ( TriggerAlgorithmCollection::const_iterator iAlgorithm = algorithms()->begin(); iAlgorithm != algorithms()->end(); ++iAlgorithm ) {
-    const std::string nameAlgorithm( iAlgorithm->name() );
+    const std::string& nameAlgorithm( iAlgorithm->name() );
     if ( conditionInAlgorithm( conditionRef, nameAlgorithm ) ) {
       const TriggerAlgorithmRef algorithmRef( algorithms_, cAlgorithms );
       theConditionAlgorithms.push_back( algorithmRef );
@@ -548,7 +548,7 @@ TriggerConditionRefVector TriggerEvent::objectConditions( const TriggerObjectRef
 {
   TriggerConditionRefVector theObjectConditions;
   for ( TriggerConditionCollection::const_iterator iCondition = conditions()->begin(); iCondition != conditions()->end(); ++iCondition ) {
-    const std::string nameCondition( iCondition->name() );
+    const std::string& nameCondition( iCondition->name() );
     if ( objectInCondition( objectRef, nameCondition ) ) {
       const TriggerConditionRef conditionRef( conditions_, indexCondition( nameCondition ) );
       theObjectConditions.push_back( conditionRef );
@@ -564,7 +564,7 @@ TriggerObjectRefVector TriggerEvent::algorithmObjects( const std::string & nameA
   TriggerObjectRefVector    theAlgorithmObjects;
   TriggerConditionRefVector theConditions = algorithmConditions( nameAlgorithm );
   for ( TriggerConditionRefVectorIterator iCondition = theConditions.begin(); iCondition != theConditions.end(); ++iCondition ) {
-    const std::string nameCondition( ( *iCondition )->name() );
+    const std::string& nameCondition( ( *iCondition )->name() );
     TriggerObjectRefVector theObjects = conditionObjects( nameCondition );
     for ( TriggerObjectRefVectorIterator iObject = theObjects.begin(); iObject != theObjects.end(); ++iObject ) {
       theAlgorithmObjects.push_back( *iObject );
@@ -590,7 +590,7 @@ TriggerAlgorithmRefVector TriggerEvent::objectAlgorithms( const TriggerObjectRef
 {
   TriggerAlgorithmRefVector theObjectAlgorithms;
   for ( TriggerAlgorithmCollection::const_iterator iAlgorithm = algorithms()->begin(); iAlgorithm != algorithms()->end(); ++iAlgorithm ) {
-    const std::string nameAlgorithm( iAlgorithm->name() );
+    const std::string& nameAlgorithm( iAlgorithm->name() );
     if ( objectInAlgorithm( objectRef, nameAlgorithm ) ) {
       const TriggerAlgorithmRef algorithmRef( algorithms_, indexAlgorithm( nameAlgorithm ) );
       theObjectAlgorithms.push_back( algorithmRef );
@@ -608,7 +608,7 @@ TriggerFilterRefVector TriggerEvent::pathModules( const std::string & namePath,
     if ( pathPtr->modules().size() > 0 ) {
       const unsigned onePastLastFilter = all ? pathPtr->modules().size() : pathPtr->lastActiveFilterSlot() + 1;
       for ( unsigned iM = 0; iM < onePastLastFilter; ++iM ) {
-        const std::string labelFilter( pathPtr->modules().at( iM ) );
+        const std::string & labelFilter( pathPtr->modules().at( iM ) );
         const TriggerFilterRef filterRef( filters_, indexFilter( labelFilter ) );
         thePathFilters.push_back( filterRef );
       }
@@ -649,7 +649,7 @@ TriggerPathRefVector TriggerEvent::filterPaths( const TriggerFilterRef & filterR
   TriggerPathRefVector theFilterPaths;
   size_t cPaths( 0 );
   for ( TriggerPathCollection::const_iterator iPath = paths()->begin(); iPath != paths()->end(); ++iPath ) {
-    const std::string namePath( iPath->name() );
+    const std::string& namePath( iPath->name() );
     if ( filterInPath( filterRef, namePath, firing ) ) {
       const TriggerPathRef pathRef( paths_, cPaths );
       theFilterPaths.push_back( pathRef );
@@ -713,7 +713,7 @@ TriggerFilterRefVector TriggerEvent::objectFilters( const TriggerObjectRef & obj
 {
   TriggerFilterRefVector theObjectFilters;
   for ( TriggerFilterCollection::const_iterator iFilter = filters()->begin(); iFilter != filters()->end(); ++iFilter ) {
-    const std::string labelFilter( iFilter->label() );
+    const std::string& labelFilter( iFilter->label() );
     if ( objectInFilter( objectRef, labelFilter ) ) {
       const TriggerFilterRef filterRef( filters_, indexFilter( labelFilter ) );
       if ( ( ! firing ) || iFilter->isFiring() ) theObjectFilters.push_back( filterRef );
@@ -729,7 +729,7 @@ TriggerObjectRefVector TriggerEvent::pathObjects( const std::string & namePath,
   TriggerObjectRefVector thePathObjects;
   TriggerFilterRefVector theFilters = pathFilters( namePath, firing );
   for ( TriggerFilterRefVectorIterator iFilter = theFilters.begin(); iFilter != theFilters.end(); ++iFilter ) {
-    const std::string labelFilter( ( *iFilter )->label() );
+    const std::string& labelFilter( ( *iFilter )->label() );
     TriggerObjectRefVector theObjects = filterObjects( labelFilter );
     for ( TriggerObjectRefVectorIterator iObject = theObjects.begin(); iObject != theObjects.end(); ++iObject ) {
       thePathObjects.push_back( *iObject );
@@ -755,7 +755,7 @@ TriggerPathRefVector TriggerEvent::objectPaths( const TriggerObjectRef & objectR
 {
   TriggerPathRefVector theObjectPaths;
   for ( TriggerPathCollection::const_iterator iPath = paths()->begin(); iPath != paths()->end(); ++iPath ) {
-    const std::string namePath( iPath->name() );
+    const std::string& namePath( iPath->name() );
     if ( objectInPath( objectRef, namePath, firing ) ) {
       const TriggerPathRef pathRef( paths_, indexPath( namePath ) );
       theObjectPaths.push_back( pathRef );
